% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pglmm-utils.R
\name{prep_dat_pglmm}
\alias{prep_dat_pglmm}
\title{Utils functions for communityPGLMM}
\usage{
prep_dat_pglmm(formula, data, tree, repulsion = FALSE,
  prep.re.effects = TRUE, family = "gaussian", prep.s2.lme4 = FALSE,
  tree_site = NULL, bayes = FALSE, add.obs.re = TRUE)
}
\arguments{
\item{formula}{A two-sided linear formula object describing the
mixed-effects of the model; it follows similar syntax with \code{\link[lme4:lmer]{lmer}}.
There are some differences though.

First, to specify that a random term should have phylogenetic cov matrix along
with non-phylogenetic one, add \code{__} (two underscores) at the end of the group variable,
e.g. \code{+ (1 | sp__)} will construct two random terms,
one with phylogenetic cov matrix and another with non-phylogenetic (Identity) matrix;
However, \code{__} in the nested terms (below) will only create a phlylogenetic cov-matrix.
Therefore, nested random term has four forms:
\enumerate{
\item \code{(1|sp__@site)} represents correlated species are nested within independent sites
(i.e. kronecker(I_sites, V_sp)). This should be the most common one for community analysis.
\item \code{(1|sp@site__)} represents independent species are nested within correlated sites
(i.e. kron(V_sites, I_sp)). This one can be used for bipartite questions.
You can, for example, treat sp as insects and site as plants.
Remember to set the argument \code{tree_site} to a phylogeny.
\item \code{(1|sp__@site__)} represents correlated species are nested within correlated sites
(i.e. kron(V_sites, V_sp)). This one can also be used for bipartite questions.
\item \code{(1|sp@site)} will generate a identity matrix, which will be the same as
an observation level random term or the residual of LMM. So not very meaningful for gaussian models;
observation-level random term will be automatically added for binomial and poisson models.
}

Second, note that correlated random terms will not be allowed at this moment. For example,
\code{(x|g)} will be equal with \code{(0 + x|g)} in the \code{lme4::lmer} syntax;
also, \code{(x1 + x2|g)} won't work.}

\item{data}{A \code{\link{data.frame}} containing the variables
named in formula. The data frame should have long format with
a column for species (named as 'sp') and a column for sites (named as 'site').
\code{communityPGLMM} will reorder rows of the data frame so that species
are nested within sites (i.e. arrange first by column site then by column sp).}

\item{tree}{A phylogeny for column sp, with "phylo" class. Or a var-cov matrix for sp,
make sure to have all species in the matrix; if the matrix is not standarized,
i.e. det(tree) != 1, we will try to standarize it for you.}

\item{repulsion}{When nested random term specified, do you want to test repulsion
(i.e. overdispersion) or underdispersion? Default is FALSE, i.e. test underdispersion.
This argument can be either a logical vector of length 1 or >1.
If its length is 1, then all cov matrices in nested terms will be either inverted (overdispersion) or not.
If its length is >1, then this means the users can select which cov matrix in the nested terms to be inverted.
If so, make sure to get the length right: for all the terms with \code{@},
count the number of "__" and this will be the length of repulsion.
For example, \code{sp__@site} will take one length as well as \code{sp@site__}.
\code{sp__@site__} will take two elements. So, if you nested terms are
\code{(1|sp__@site) + (1|sp@site__) + (1|sp__@site__)}
in the formula, then you should set the repulsion to be something like
\code{c(TRUE, FALSE, TURE, TURE)} (length of 4).
The T/F combinations depend on your questions.}

\item{prep.re.effects}{Whether to prepare random effects for users.}

\item{family}{Either \code{gaussian} for a Linear Mixed Model, or
\code{binomial} for binomial dependent data, or \code{poisson} for count data.
It should be specified as a character string (i.e. quoted). At this moment,
for binomial data, we fixed the link function to logit; for poisson data,
we fixed the link function to log. Binomial data can be either
presence/absence, or a two column array of 'success' and 'fail'.
For both poisson and binomial data, we add an observation-level
random term by default via \code{add.obs.re = TRUE}. If \code{bayes = TRUE} there are
two additional families available: "zeroinflated.binomial", and "zeroinflated.poisson",
which add a "zero inflation" parameter, which is the probability that a the response is
a zero. The rest of the parameters of the model then reflect the "non-zero" part part
of the model. Note that "zeroinflated.binomial" only makes sense as a using successes /
Ntrials type of response data.}

\item{prep.s2.lme4}{Whether to prepare initial s2 values based on lme4 theta. Default is FALSE.
If no phylogenetic or nested random terms, should set it to TRUE since it likely will be faster.
However, in this case, you probably can just use lme4::lmer.}

\item{tree_site}{A second phylogeny for "site". This is required only if the site column contains species instead of sites.
This can be used for bipartitie questions. tree_site can also be a var-cov matrix, make sure to have all sites in the matrix;
if the matrix is not standarized, i.e. det(tree_site) != 1, we will try to standarize for you.}

\item{bayes}{Whether to fit a Bayesian version of the PGLMM using \code{r-inla}.}

\item{add.obs.re}{Wether add observation-level random term for poisson and binomial
distributions? Normally it would be a good idea to add this to account for overdispersions.
Thus, we set it to TRUE by default.}
}
\value{
A list with formula, data, random.effects, etc.
}
\description{
\code{prep_dat_pglmm} prepares data for later model fitting
}
